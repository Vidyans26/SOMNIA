# ══════════════════════════════════════════════════════════════════════════════
# SOMNIA - Sleep Health Monitoring System
# Environment Configuration Template
# ══════════════════════════════════════════════════════════════════════════════
# 
# Copy this file to .env and update the values according to your deployment.
# This file contains all available configuration options with descriptions.
#
# Quick Start:
#   1. Copy: cp .env.example .env
#   2. Review and update values below
#   3. Start: ./run.sh (Unix/Mac) or .\run.ps1 (Windows)
# ══════════════════════════════════════════════════════════════════════════════

# ──────────────────────────────────────────────────────────────────────────────
# Application Settings
# ──────────────────────────────────────────────────────────────────────────────

# Debug mode - Enables detailed logging and error traces
# Values: true | false
# Production: false, Development: true
DEBUG=true

# Deployment environment
# Values: development | production | testing
ENVIRONMENT=development

# Server host binding
# Values: 0.0.0.0 (all interfaces) | 127.0.0.1 (localhost only)
# Production: 0.0.0.0, Development: 0.0.0.0
HOST=0.0.0.0

# Server port
# Values: 1024-65535
# Default: 8000
PORT=8000

# ──────────────────────────────────────────────────────────────────────────────
# Machine Learning Models Configuration
# ──────────────────────────────────────────────────────────────────────────────

# Enable/disable ML model inference
# When true: Uses real TensorFlow models for predictions
# When false: Returns mock/sample data
# Values: true | false
# Production: true, Development: true (if models available)
ENABLE_ML_MODELS=true

# Use mock data instead of real inference
# Overrides ML models even if ENABLE_ML_MODELS=true
# Useful for testing API without heavy ML computation
# Values: true | false
# Production: false, Development: false
USE_MOCK=false

# ──────────────────────────────────────────────────────────────────────────────
# Feature Flags - Modality Toggles
# ──────────────────────────────────────────────────────────────────────────────

# Enable snoring detection analysis
# Requires: librosa, soundfile, audio processing libraries
# Values: true | false
# Production: true (if models available)
ENABLE_SNORING=true

# Enable video pose estimation
# Requires: MediaPipe, OpenCV, video processing libraries
# Values: true | false
# Production: false (experimental feature)
ENABLE_VIDEO_POSE=false

# ──────────────────────────────────────────────────────────────────────────────
# ML Model File Paths
# ──────────────────────────────────────────────────────────────────────────────
# Paths are relative to the project root directory

# SpO2 (Oxygen Saturation) Model
# Input: Time-series SpO2 data
# Output: Sleep apnea risk classification
SPO2_MODEL_PATH=backend/models/SpO2_weights.hdf5

# ECG (Electrocardiogram) Model
# Input: Heart rate variability data
# Output: Cardiac abnormality detection
ECG_MODEL_PATH=backend/models/ecg_weights.hdf5

# Snoring Detection Model (optional)
# Input: Audio waveform features
# Output: Snoring events classification
# SNORING_MODEL_PATH=backend/models/snoring_model.h5

# Video Pose Model (optional - experimental)
# Input: Video frames
# Output: Body position and movement analysis
# POSE_MODEL_PATH=backend/models/pose_model.h5

# ──────────────────────────────────────────────────────────────────────────────
# Database Configuration (Optional - for future use)
# ──────────────────────────────────────────────────────────────────────────────

# Database URL for persistent storage
# Currently not used - data is ephemeral
# DATABASE_URL=sqlite:///./somnia.db
# DATABASE_URL=postgresql://user:password@localhost/somnia

# ──────────────────────────────────────────────────────────────────────────────
# Authentication & Security (Optional - for future use)
# ──────────────────────────────────────────────────────────────────────────────

# Secret key for JWT token generation
# Generate with: openssl rand -hex 32
# SECRET_KEY=your-secret-key-here

# Token expiration time in minutes
# TOKEN_EXPIRE_MINUTES=30

# ──────────────────────────────────────────────────────────────────────────────
# Storage Configuration
# ──────────────────────────────────────────────────────────────────────────────

# Directory for uploaded files (audio, video)
# Relative to project root
# UPLOAD_DIR=uploads

# Maximum upload file size in MB
# MAX_UPLOAD_SIZE_MB=100

# ──────────────────────────────────────────────────────────────────────────────
# Logging Configuration
# ──────────────────────────────────────────────────────────────────────────────

# Log level
# Values: DEBUG | INFO | WARNING | ERROR | CRITICAL
# Production: INFO, Development: DEBUG
# LOG_LEVEL=INFO

# Log file path
# LOG_FILE=logs/somnia.log

# ──────────────────────────────────────────────────────────────────────────────
# CORS Configuration
# ──────────────────────────────────────────────────────────────────────────────

# Allowed origins for CORS (comma-separated)
# Production: Specific domains only
# Development: * (allow all) or specific localhost ports
# CORS_ORIGINS=http://localhost:3000,http://localhost:8081,exp://192.168.1.100:8081

# ──────────────────────────────────────────────────────────────────────────────
# TensorFlow Configuration (Advanced)
# ──────────────────────────────────────────────────────────────────────────────

# TensorFlow logging level
# Values: 0 (all) | 1 (filter INFO) | 2 (filter WARNING) | 3 (filter ERROR)
# TF_CPP_MIN_LOG_LEVEL=2

# Enable GPU acceleration (if available)
# TF_ENABLE_GPU=false

# Number of threads for TensorFlow operations
# TF_NUM_THREADS=4

# ══════════════════════════════════════════════════════════════════════════════
# DEPLOYMENT PROFILES
# ══════════════════════════════════════════════════════════════════════════════
#
# DEVELOPMENT PROFILE (Recommended for local development):
# ─────────────────────────────────────────────────────────
# DEBUG=true
# ENVIRONMENT=development
# ENABLE_ML_MODELS=true
# USE_MOCK=false
# ENABLE_SNORING=true
# ENABLE_VIDEO_POSE=false
#
# PRODUCTION PROFILE (Recommended for deployment):
# ─────────────────────────────────────────────────────────
# DEBUG=false
# ENVIRONMENT=production
# ENABLE_ML_MODELS=true
# USE_MOCK=false
# ENABLE_SNORING=true
# ENABLE_VIDEO_POSE=false
# LOG_LEVEL=INFO
#
# TESTING PROFILE (Fast API testing without ML):
# ─────────────────────────────────────────────────────────
# DEBUG=true
# ENVIRONMENT=testing
# ENABLE_ML_MODELS=false
# USE_MOCK=true
# ENABLE_SNORING=false
# ENABLE_VIDEO_POSE=false
#
# ══════════════════════════════════════════════════════════════════════════════
